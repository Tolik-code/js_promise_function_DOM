{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","eventPromise","Promise","resolve","reject","addEventListener","nodeName","id","printMessage","message","eventNotification","document","createElement","className","innerHTML","body","append","setTimeout","remove","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAQjBC,OANc,IAAIC,QAAQ,SAACC,EAASC,GACzCL,EAAQM,iBAAiBL,EAAW,WAAMG,OAAAA,EACjCH,gBAAAA,OAAAA,EACSD,0BAAAA,OAAAA,EAAQO,SAAiBP,UAAAA,OAAAA,EAAQQ,GAFf,UAQxC,IAAMC,EAAe,SAACC,GAEdC,IAAAA,EAAoBC,SAASC,cAAc,OAEjDF,EAAkBG,UAAY,UAE9BH,EAAkBI,UACXL,YAAAA,OAAAA,EADP,YAIAE,SAASI,KAAKC,OAAON,GACrBO,WAAW,WAAMP,OAAAA,EAAkBQ,UAAU,MAG/CC,OAAOC,QAAU,CACftB,QAAAA,EACAU,aAAAA","file":"main.af4a5184.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n// write your code here\n  const eventPromise = new Promise((resolve, reject) => {\n    element.addEventListener(eventName, () => resolve(`\n    It was ${eventName}\n    on the element: ${element.nodeName}, id: ${element.id}.`));\n  });\n\n  return eventPromise;\n}\n\nconst printMessage = (message) => {\n// write your code here\n  const eventNotification = document.createElement('div');\n\n  eventNotification.className = 'message';\n\n  eventNotification.innerHTML = `\n    <p>${message}</p>\n  `;\n\n  document.body.append(eventNotification);\n  setTimeout(() => eventNotification.remove(), 2000);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}